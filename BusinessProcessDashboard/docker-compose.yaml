version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    networks:
      - curl-net
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
      # - "./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.0.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - curl-net
    volumes:
      - ./kibana-data:/usr/share/kibana/data
      # - "./kibana.yml:/usr/share/kibana/config/kibana.yml"
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  mysql-camunda:
    image: mysql:5.6
    container_name: mysqlcamunda
    volumes:
        - ./camunda-data:/var/lib/mysql
    ports:
        - 3306:3306
    environment:
        MYSQL_ROOT_PASSWORD: changeme
        MYSQL_DATABASE: process_engine
        MYSQL_USER: dev
        MYSQL_PASSWORD: changeme
    networks:
      - curl-net
      
  camunda: # http://localhost:8080/camunda-welcome/index.html     Username: demo, Password: demo
    image: camunda/camunda-bpm-platform:latest
    container_name: camunda
    networks:
      - curl-net
    ports:
      - 8080:8080
    environment:
        DB_DRIVER: com.mysql.jdbc.Driver
        DB_USERNAME: dev
        DB_PASSWORD: changeme
        DB_URL: jdbc:mysql://mysql-camunda:3306/process_engine
        WAIT_FOR: mysql-camunda:3306
        WAIT_FOR_TIMEOUT: 120
    depends_on:
      - mysql-camunda
      - dynamicmetrics

  staticmetrics:
    # build:
    #   dockerfile: ./staticmetrics.dockerfile
    #   context: ./docker/
    image: luarhub/staticmetrics
    tty: true
    container_name: staticmetrics
    networks:
      - curl-net
    depends_on:
      - elasticsearch
      - kibana 
    volumes:
      - "./static-metrics-data:/tmp/:rw"

  dynamicmetrics:
    # build:
    #   dockerfile: ./dynamicmetrics.dockerfile
    #   context: ./docker/
    image: luarhub/dynamicmetrics
    tty: true
    container_name: dynamicmetrics
    networks:
      - curl-net
    depends_on:
      - elasticsearch
      - kibana
    volumes:
      - "./dynamic-metrics-data:/tmp/:rw"

networks:
  curl-net:
    driver: bridge

volumes:
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local
  camunda-data: